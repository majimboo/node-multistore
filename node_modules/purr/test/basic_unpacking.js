'use strict';

var assert  = require('assert');
var msgpack = require('msgpack');
var purr    = require('../');

describe('::unpack', function() {
  describe('sameness with Messagepack', function() {
    it('should unpack strings like MessagePack', function(done) {
      var packed = msgpack.pack('foo');

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('should unpack integers like MessagePack', function(done) {
      var packed = msgpack.pack(123);

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('should unpack floats like MessagePack', function(done) {
      var packed = msgpack.pack(1.1);

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('should unpack arrays like MessagePack', function(done) {
      var packed = msgpack.pack([1,2,3]);

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('should unpack hashes like MessagePack', function(done) {
      var packed = msgpack.pack({ "foo" : "bar" });

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('should deep unpack arrays like MessagePack', function(done) {
      var array  = [1,2,[3,4],[5,[6]]];
      var packed = msgpack.pack(array);

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('should deep unpack hashes like MessagePack', function(done) {
      var hash   = { a : 'a', b: { c : { d: 1 } }, e : 2 };
      var packed = msgpack.pack(hash);

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('should deep unpack collections like MessagePack', function(done) {
      var coll   = [ 1, 2, { a : { b : { c : 3 } } }, [4,5]];
      var packed = msgpack.pack(coll);

      var u1 = purr.unpack(packed);
      var u2 = msgpack.unpack(packed);

      assert.deepEqual(u1, u2);
      done();
    });

    it('unpacks nil properly', function () {
      var unpacked = purr.unpack(new Buffer([0xc0]));

      assert.deepEqual(unpacked, null);
    });
  });
});
