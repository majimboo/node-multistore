'use strict';
/*global describe: false, it: false, before: false, beforeEach: false, after: false, afterEach: false */

var assert = require('assert');
var purr   = require('../');
var util   = require('util');
var shared = require('./support/shared');

describe('Purr', function () {
  describe('pack', function () {
    describe('asynchrony', function () {
      beforeEach(function () {
        var invalidPayload = {};
        invalidPayload.self = invalidPayload;

        this.funcUnderTest    = purr.pack;
        this.validArguments   = [1];
        this.invalidArguments = [invalidPayload];
        this.expectedResult   = new Buffer([1]);
      });

      shared.shouldBehaveLikeANodeJSAsyncFunction();
    });
  });

  describe('unpack', function () {
    describe('asynchrony', function () {
      beforeEach(function () {
        this.funcUnderTest    = purr.unpack;
        this.validArguments   = [new Buffer([1])];
        this.invalidArguments = [1];
        this.expectedResult   = 1;
      });

      shared.shouldBehaveLikeANodeJSAsyncFunction();
    });
  });
});
