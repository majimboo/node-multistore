#ifndef MSGPACK_EXT_DATE_H
#define MSGPACK_EXT_DATE_H

#include "sysdep.h"
#include "object.h"

#ifdef __cplusplus
extern "C" {
#endif

struct msgpack_time_components;
struct msgpack_time_payload;
typedef struct msgpack_time_components msgpack_time_components;
typedef struct msgpack_time_payload msgpack_time_payload;

struct msgpack_time_payload {
    uint8_t *payload;
    size_t size;
};

union msgpack_time_cast_block_sec {
    int64_t i64;
    char mem[8];
};

union msgpack_time_cast_block_nsec {
    uint32_t u32;
    char mem[4];
};

union msgpack_time_cast_block_utc_offset {
    int16_t i16;
    char mem[2];
};

struct msgpack_time_components {
    union {
      uint8_t u8;
      char mem[1];
    } descriptor;

    struct {
        union msgpack_time_cast_block_sec value;
        size_t size;
    } sec;

    struct {
        union msgpack_time_cast_block_nsec value;
        size_t size;
    } nsec;

    struct {
        union msgpack_time_cast_block_utc_offset value;
        size_t size;
    } utc_offset;
};

void msgpack_time_set_secs(msgpack_time_components *tc, const int64_t tv_sec);
void msgpack_time_set_nsecs(msgpack_time_components *tc, const uint32_t tv_nsec);
void msgpack_time_set_tz(msgpack_time_components *tc, const int16_t utc_offset, const int8_t isdst);
void msgpack_packer_write_date(msgpack_object *mo, msgpack_zone *mz, int64_t sec, uint32_t nsec, int16_t utc_offset, uint8_t isdst);
msgpack_time_payload *msgpack_time_create_payload(msgpack_time_components *tc);

#ifdef __cplusplus
}
#endif

#endif /* msgpack/ext_date.h */
